- test: line numbers if else
  args: "-c"
  source: |
    let a=1;

    if
    a
    ==
    1
    {
    println("yes");
    }
    else
    {
    println("no");
    }
  out: |+
    ; main
    ; 0 parameter(s), 2 constant(s), 17 instruction(s), 0 function(s)
      0      1      PUSH_INT        1    
      1      4      LOAD_LOCAL      1    
      2      6      PUSH_INT        1    
      3      5      EQ             
      4      7      JUMP_IF_FALSE   11   
      5             POP            
      6      8      LOAD_GLOBAL     41   
      7             LOAD_CONST      0    
      8             CALL            1    
      9             POP            
      10     9      JUMP            16   
      11     10     POP            
      12     12     LOAD_GLOBAL     41   
      13            LOAD_CONST      1    
      14            CALL            1    
      15            POP            
      16     14     RETURN_NIL     
    
- test: line numbers loops
  args: "-c"
  source: |
    let a=1;

    while
    a
    <=
    10
    {
      println(a);
      &a
      +=
      1
      ;
    }
    loop
    {
      if (a==10) {
        break
        ;
      }
      if (a<10) {
        &a+=1;
        continue
        ;
      }
    }
  out: |+
    ; main
    ; 0 parameter(s), 0 constant(s), 39 instruction(s), 0 function(s)
      0      1      PUSH_INT        1    
      1      4      LOAD_LOCAL      1    
      2      6      PUSH_INT        10   
      3      5      GT             
      4             NOT            
      5      7      JUMP_IF_FALSE   16   
      6             POP            
      7      8      LOAD_GLOBAL     41   
      8             LOAD_LOCAL      1    
      9             CALL            1    
      10            POP            
      11     11     LOAD_LOCAL      1    
      12            PUSH_INT        1    
      13     10     ADD            
      14     9      STORE_LOCAL     1    
      15     13     JUMP            1    
      16     14     POP            
      17     16     LOAD_LOCAL      1    
      18            PUSH_INT        10   
      19            EQ             
      20            JUMP_IF_FALSE   24   
      21            POP            
      22     17     JUMP            38   
      23     19     JUMP            25   
      24     20     POP            
      25            LOAD_LOCAL      1    
      26            PUSH_INT        10   
      27            LT             
      28            JUMP_IF_FALSE   36   
      29            POP            
      30     21     LOAD_LOCAL      1    
      31            PUSH_INT        1    
      32            ADD            
      33            STORE_LOCAL     1    
      34     22     JUMP            17   
      35     24     JUMP            37   
      36     25     POP            
      37            JUMP            17   
      38     26     RETURN_NIL     
    
- test: line numbers yield
  args: "-c"
  source: |
    fn f() {
      yield
      1
      ;
      yield 2;
      return 3;
    }
    let a
    =
    f(
    )
    ;
  out: |+
    ; main
    ; 0 parameter(s), 0 constant(s), 4 instruction(s), 1 function(s)
      0      1      NEW_CLOSURE     0    
      1      10     LOAD_LOCAL      1    
      2             CALL            0    
      3      13     RETURN_NIL     

    ; f
    ; 0 parameter(s), 0 constant(s), 7 instruction(s), 0 function(s)
      0      3      PUSH_INT        1    
      1      2      YIELD          
      2      5      PUSH_INT        2    
      3             YIELD          
      4      6      PUSH_INT        3    
      5             RETURN         
      6      7      RETURN_NIL     
    
- test: line numbers return
  args: "-c"
  source: |
    fn factorial(n) {
      if n == 0 {
        return
        1
        ;
      }
      return
      n 
      *
      factorial(
        n 
        -
        1
      );
    }

    return
    1
    +
    factorial(
      5)
    ;
  out: |+
    ; main
    ; 0 parameter(s), 0 constant(s), 8 instruction(s), 1 function(s)
      0      1      NEW_CLOSURE     0    
      1      18     PUSH_INT        1    
      2      20     LOAD_LOCAL      1    
      3      21     PUSH_INT        5    
      4      20     CALL            1    
      5      19     ADD            
      6      17     RETURN         
      7      23     RETURN_NIL     

    ; factorial
    ; 1 parameter(s), 0 constant(s), 18 instruction(s), 0 function(s)
      0      2      LOAD_LOCAL      1    
      1             PUSH_INT        0    
      2             EQ             
      3             JUMP_IF_FALSE   8    
      4             POP            
      5      4      PUSH_INT        1    
      6      3      RETURN         
      7      6      JUMP            9    
      8      7      POP            
      9      8      LOAD_LOCAL      1    
      10     10     LOAD_LOCAL      0    
      11     11     LOAD_LOCAL      1    
      12     13     PUSH_INT        1    
      13     12     SUB            
      14     10     CALL            1    
      15     9      MUL            
      16     7      RETURN         
      17     15     RETURN_NIL     
    
